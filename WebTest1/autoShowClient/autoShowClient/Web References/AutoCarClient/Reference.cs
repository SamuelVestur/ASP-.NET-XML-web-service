//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace autoShowClient.AutoCarClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://microsoft.com/webservices/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addCarToXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback showAllCarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCarByVinOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCarByVinOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCarByVinOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::autoShowClient.Properties.Settings.Default.autoShowClient_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addCarToXmlCompletedEventHandler addCarToXmlCompleted;
        
        /// <remarks/>
        public event showAllCarsCompletedEventHandler showAllCarsCompleted;
        
        /// <remarks/>
        public event searchCarByVinCompletedEventHandler searchCarByVinCompleted;
        
        /// <remarks/>
        public event updateCarByVinCompletedEventHandler updateCarByVinCompleted;
        
        /// <remarks/>
        public event deleteCarByVinCompletedEventHandler deleteCarByVinCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/addCarToXml", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addCarToXml(string brand, string model, int yearOfProduction, string VINNumber, string color, string transmission, string fuel, float mileage, float price, string historicalServiceData, System.DateTime dateOfRegistration, string status, string dateOfSale, string salePrice) {
            this.Invoke("addCarToXml", new object[] {
                        brand,
                        model,
                        yearOfProduction,
                        VINNumber,
                        color,
                        transmission,
                        fuel,
                        mileage,
                        price,
                        historicalServiceData,
                        dateOfRegistration,
                        status,
                        dateOfSale,
                        salePrice});
        }
        
        /// <remarks/>
        public void addCarToXmlAsync(string brand, string model, int yearOfProduction, string VINNumber, string color, string transmission, string fuel, float mileage, float price, string historicalServiceData, System.DateTime dateOfRegistration, string status, string dateOfSale, string salePrice) {
            this.addCarToXmlAsync(brand, model, yearOfProduction, VINNumber, color, transmission, fuel, mileage, price, historicalServiceData, dateOfRegistration, status, dateOfSale, salePrice, null);
        }
        
        /// <remarks/>
        public void addCarToXmlAsync(string brand, string model, int yearOfProduction, string VINNumber, string color, string transmission, string fuel, float mileage, float price, string historicalServiceData, System.DateTime dateOfRegistration, string status, string dateOfSale, string salePrice, object userState) {
            if ((this.addCarToXmlOperationCompleted == null)) {
                this.addCarToXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCarToXmlOperationCompleted);
            }
            this.InvokeAsync("addCarToXml", new object[] {
                        brand,
                        model,
                        yearOfProduction,
                        VINNumber,
                        color,
                        transmission,
                        fuel,
                        mileage,
                        price,
                        historicalServiceData,
                        dateOfRegistration,
                        status,
                        dateOfSale,
                        salePrice}, this.addCarToXmlOperationCompleted, userState);
        }
        
        private void OnaddCarToXmlOperationCompleted(object arg) {
            if ((this.addCarToXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCarToXmlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/showAllCars", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void showAllCars() {
            this.Invoke("showAllCars", new object[0]);
        }
        
        /// <remarks/>
        public void showAllCarsAsync() {
            this.showAllCarsAsync(null);
        }
        
        /// <remarks/>
        public void showAllCarsAsync(object userState) {
            if ((this.showAllCarsOperationCompleted == null)) {
                this.showAllCarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowAllCarsOperationCompleted);
            }
            this.InvokeAsync("showAllCars", new object[0], this.showAllCarsOperationCompleted, userState);
        }
        
        private void OnshowAllCarsOperationCompleted(object arg) {
            if ((this.showAllCarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showAllCarsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/searchCarByVin", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void searchCarByVin(string VINNumber) {
            this.Invoke("searchCarByVin", new object[] {
                        VINNumber});
        }
        
        /// <remarks/>
        public void searchCarByVinAsync(string VINNumber) {
            this.searchCarByVinAsync(VINNumber, null);
        }
        
        /// <remarks/>
        public void searchCarByVinAsync(string VINNumber, object userState) {
            if ((this.searchCarByVinOperationCompleted == null)) {
                this.searchCarByVinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCarByVinOperationCompleted);
            }
            this.InvokeAsync("searchCarByVin", new object[] {
                        VINNumber}, this.searchCarByVinOperationCompleted, userState);
        }
        
        private void OnsearchCarByVinOperationCompleted(object arg) {
            if ((this.searchCarByVinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCarByVinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/updateCarByVin", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateCarByVin(string VINNumber, string newDateofsale, string newSaleprice) {
            this.Invoke("updateCarByVin", new object[] {
                        VINNumber,
                        newDateofsale,
                        newSaleprice});
        }
        
        /// <remarks/>
        public void updateCarByVinAsync(string VINNumber, string newDateofsale, string newSaleprice) {
            this.updateCarByVinAsync(VINNumber, newDateofsale, newSaleprice, null);
        }
        
        /// <remarks/>
        public void updateCarByVinAsync(string VINNumber, string newDateofsale, string newSaleprice, object userState) {
            if ((this.updateCarByVinOperationCompleted == null)) {
                this.updateCarByVinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCarByVinOperationCompleted);
            }
            this.InvokeAsync("updateCarByVin", new object[] {
                        VINNumber,
                        newDateofsale,
                        newSaleprice}, this.updateCarByVinOperationCompleted, userState);
        }
        
        private void OnupdateCarByVinOperationCompleted(object arg) {
            if ((this.updateCarByVinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCarByVinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/deleteCarByVin", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteCarByVin(string VINNumber) {
            this.Invoke("deleteCarByVin", new object[] {
                        VINNumber});
        }
        
        /// <remarks/>
        public void deleteCarByVinAsync(string VINNumber) {
            this.deleteCarByVinAsync(VINNumber, null);
        }
        
        /// <remarks/>
        public void deleteCarByVinAsync(string VINNumber, object userState) {
            if ((this.deleteCarByVinOperationCompleted == null)) {
                this.deleteCarByVinOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCarByVinOperationCompleted);
            }
            this.InvokeAsync("deleteCarByVin", new object[] {
                        VINNumber}, this.deleteCarByVinOperationCompleted, userState);
        }
        
        private void OndeleteCarByVinOperationCompleted(object arg) {
            if ((this.deleteCarByVinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCarByVinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/HelloWorld", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addCarToXmlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void showAllCarsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchCarByVinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateCarByVinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCarByVinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591