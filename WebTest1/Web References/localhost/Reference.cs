//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebTest1.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://microsoft.com/webservices/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addCarToXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowAllCarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCarByVINOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCarByVinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalCarsSoldPerYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterByParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSoldAndUnsoldCarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUnsoldCarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCarsByPriceRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculationOfProfitOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::WebTest1.Properties.Settings.Default.WebTest1_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addCarToXmlCompletedEventHandler addCarToXmlCompleted;
        
        /// <remarks/>
        public event ShowAllCarsCompletedEventHandler ShowAllCarsCompleted;
        
        /// <remarks/>
        public event FindCarByVINCompletedEventHandler FindCarByVINCompleted;
        
        /// <remarks/>
        public event UpdateCarSaleCompletedEventHandler UpdateCarSaleCompleted;
        
        /// <remarks/>
        public event deleteCarByVinCompletedEventHandler deleteCarByVinCompleted;
        
        /// <remarks/>
        public event GetTotalCarsSoldPerYearCompletedEventHandler GetTotalCarsSoldPerYearCompleted;
        
        /// <remarks/>
        public event FilterByParametersCompletedEventHandler FilterByParametersCompleted;
        
        /// <remarks/>
        public event GetSoldAndUnsoldCarsCompletedEventHandler GetSoldAndUnsoldCarsCompleted;
        
        /// <remarks/>
        public event SaveUnsoldCarsCompletedEventHandler SaveUnsoldCarsCompleted;
        
        /// <remarks/>
        public event SearchCarsByPriceRangeCompletedEventHandler SearchCarsByPriceRangeCompleted;
        
        /// <remarks/>
        public event CalculationOfProfitCompletedEventHandler CalculationOfProfitCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/addCarToXml", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addCarToXml(string brand, string model, string bodytype, int yearOfProduction, string VINNumber, string color, string transmission, string fuel, float mileage, float price, string historicalServiceData, System.DateTime dateOfRegistration, string status, string dateOfSale, string salePrice) {
            this.Invoke("addCarToXml", new object[] {
                        brand,
                        model,
                        bodytype,
                        yearOfProduction,
                        VINNumber,
                        color,
                        transmission,
                        fuel,
                        mileage,
                        price,
                        historicalServiceData,
                        dateOfRegistration,
                        status,
                        dateOfSale,
                        salePrice});
        }
        
        /// <remarks/>
        public void addCarToXmlAsync(string brand, string model, string bodytype, int yearOfProduction, string VINNumber, string color, string transmission, string fuel, float mileage, float price, string historicalServiceData, System.DateTime dateOfRegistration, string status, string dateOfSale, string salePrice) {
            this.addCarToXmlAsync(brand, model, bodytype, yearOfProduction, VINNumber, color, transmission, fuel, mileage, price, historicalServiceData, dateOfRegistration, status, dateOfSale, salePrice, null);
        }
        
        /// <remarks/>
        public void addCarToXmlAsync(
                    string brand, 
                    string model, 
                    string bodytype, 
                    int yearOfProduction, 
                    string VINNumber, 
                    string color, 
                    string transmission, 
                    string fuel, 
                    float mileage, 
                    float price, 
                    string historicalServiceData, 
                    System.DateTime dateOfRegistration, 
                    string status, 
                    string dateOfSale, 
                    string salePrice, 
                    object userState) {
            if ((this.addCarToXmlOperationCompleted == null)) {
                this.addCarToXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCarToXmlOperationCompleted);
            }
            this.InvokeAsync("addCarToXml", new object[] {
                        brand,
                        model,
                        bodytype,
                        yearOfProduction,
                        VINNumber,
                        color,
                        transmission,
                        fuel,
                        mileage,
                        price,
                        historicalServiceData,
                        dateOfRegistration,
                        status,
                        dateOfSale,
                        salePrice}, this.addCarToXmlOperationCompleted, userState);
        }
        
        private void OnaddCarToXmlOperationCompleted(object arg) {
            if ((this.addCarToXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCarToXmlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/ShowAllCars", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Car[] ShowAllCars() {
            object[] results = this.Invoke("ShowAllCars", new object[0]);
            return ((Car[])(results[0]));
        }
        
        /// <remarks/>
        public void ShowAllCarsAsync() {
            this.ShowAllCarsAsync(null);
        }
        
        /// <remarks/>
        public void ShowAllCarsAsync(object userState) {
            if ((this.ShowAllCarsOperationCompleted == null)) {
                this.ShowAllCarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowAllCarsOperationCompleted);
            }
            this.InvokeAsync("ShowAllCars", new object[0], this.ShowAllCarsOperationCompleted, userState);
        }
        
        private void OnShowAllCarsOperationCompleted(object arg) {
            if ((this.ShowAllCarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowAllCarsCompleted(this, new ShowAllCarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/FindCarByVIN", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindCarByVIN(string vinNumber) {
            object[] results = this.Invoke("FindCarByVIN", new object[] {
                        vinNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindCarByVINAsync(string vinNumber) {
            this.FindCarByVINAsync(vinNumber, null);
        }
        
        /// <remarks/>
        public void FindCarByVINAsync(string vinNumber, object userState) {
            if ((this.FindCarByVINOperationCompleted == null)) {
                this.FindCarByVINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCarByVINOperationCompleted);
            }
            this.InvokeAsync("FindCarByVIN", new object[] {
                        vinNumber}, this.FindCarByVINOperationCompleted, userState);
        }
        
        private void OnFindCarByVINOperationCompleted(object arg) {
            if ((this.FindCarByVINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCarByVINCompleted(this, new FindCarByVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UpdateCarSale", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCarSale(string vinNumber, string dateOfSale, double salePrice) {
            object[] results = this.Invoke("UpdateCarSale", new object[] {
                        vinNumber,
                        dateOfSale,
                        salePrice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarSaleAsync(string vinNumber, string dateOfSale, double salePrice) {
            this.UpdateCarSaleAsync(vinNumber, dateOfSale, salePrice, null);
        }
        
        /// <remarks/>
        public void UpdateCarSaleAsync(string vinNumber, string dateOfSale, double salePrice, object userState) {
            if ((this.UpdateCarSaleOperationCompleted == null)) {
                this.UpdateCarSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarSaleOperationCompleted);
            }
            this.InvokeAsync("UpdateCarSale", new object[] {
                        vinNumber,
                        dateOfSale,
                        salePrice}, this.UpdateCarSaleOperationCompleted, userState);
        }
        
        private void OnUpdateCarSaleOperationCompleted(object arg) {
            if ((this.UpdateCarSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarSaleCompleted(this, new UpdateCarSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/deleteCarByVin", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteCarByVin(string VINNumber) {
            this.Invoke("deleteCarByVin", new object[] {
                        VINNumber});
        }
        
        /// <remarks/>
        public void deleteCarByVinAsync(string VINNumber) {
            this.deleteCarByVinAsync(VINNumber, null);
        }
        
        /// <remarks/>
        public void deleteCarByVinAsync(string VINNumber, object userState) {
            if ((this.deleteCarByVinOperationCompleted == null)) {
                this.deleteCarByVinOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCarByVinOperationCompleted);
            }
            this.InvokeAsync("deleteCarByVin", new object[] {
                        VINNumber}, this.deleteCarByVinOperationCompleted, userState);
        }
        
        private void OndeleteCarByVinOperationCompleted(object arg) {
            if ((this.deleteCarByVinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCarByVinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTotalCarsSoldPerYear", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTotalCarsSoldPerYear(int year) {
            object[] results = this.Invoke("GetTotalCarsSoldPerYear", new object[] {
                        year});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalCarsSoldPerYearAsync(int year) {
            this.GetTotalCarsSoldPerYearAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTotalCarsSoldPerYearAsync(int year, object userState) {
            if ((this.GetTotalCarsSoldPerYearOperationCompleted == null)) {
                this.GetTotalCarsSoldPerYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalCarsSoldPerYearOperationCompleted);
            }
            this.InvokeAsync("GetTotalCarsSoldPerYear", new object[] {
                        year}, this.GetTotalCarsSoldPerYearOperationCompleted, userState);
        }
        
        private void OnGetTotalCarsSoldPerYearOperationCompleted(object arg) {
            if ((this.GetTotalCarsSoldPerYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalCarsSoldPerYearCompleted(this, new GetTotalCarsSoldPerYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/FilterByParameters", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FilterByParameters(string brand, string bodytype, string status) {
            object[] results = this.Invoke("FilterByParameters", new object[] {
                        brand,
                        bodytype,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FilterByParametersAsync(string brand, string bodytype, string status) {
            this.FilterByParametersAsync(brand, bodytype, status, null);
        }
        
        /// <remarks/>
        public void FilterByParametersAsync(string brand, string bodytype, string status, object userState) {
            if ((this.FilterByParametersOperationCompleted == null)) {
                this.FilterByParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterByParametersOperationCompleted);
            }
            this.InvokeAsync("FilterByParameters", new object[] {
                        brand,
                        bodytype,
                        status}, this.FilterByParametersOperationCompleted, userState);
        }
        
        private void OnFilterByParametersOperationCompleted(object arg) {
            if ((this.FilterByParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterByParametersCompleted(this, new FilterByParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetSoldAndUnsoldCars", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSoldAndUnsoldCars() {
            object[] results = this.Invoke("GetSoldAndUnsoldCars", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSoldAndUnsoldCarsAsync() {
            this.GetSoldAndUnsoldCarsAsync(null);
        }
        
        /// <remarks/>
        public void GetSoldAndUnsoldCarsAsync(object userState) {
            if ((this.GetSoldAndUnsoldCarsOperationCompleted == null)) {
                this.GetSoldAndUnsoldCarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSoldAndUnsoldCarsOperationCompleted);
            }
            this.InvokeAsync("GetSoldAndUnsoldCars", new object[0], this.GetSoldAndUnsoldCarsOperationCompleted, userState);
        }
        
        private void OnGetSoldAndUnsoldCarsOperationCompleted(object arg) {
            if ((this.GetSoldAndUnsoldCarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSoldAndUnsoldCarsCompleted(this, new GetSoldAndUnsoldCarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SaveUnsoldCars", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveUnsoldCars() {
            this.Invoke("SaveUnsoldCars", new object[0]);
        }
        
        /// <remarks/>
        public void SaveUnsoldCarsAsync() {
            this.SaveUnsoldCarsAsync(null);
        }
        
        /// <remarks/>
        public void SaveUnsoldCarsAsync(object userState) {
            if ((this.SaveUnsoldCarsOperationCompleted == null)) {
                this.SaveUnsoldCarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUnsoldCarsOperationCompleted);
            }
            this.InvokeAsync("SaveUnsoldCars", new object[0], this.SaveUnsoldCarsOperationCompleted, userState);
        }
        
        private void OnSaveUnsoldCarsOperationCompleted(object arg) {
            if ((this.SaveUnsoldCarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUnsoldCarsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SearchCarsByPriceRange", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("XElement")]
        public System.Xml.XmlElement[] SearchCarsByPriceRange(double from, double to) {
            object[] results = this.Invoke("SearchCarsByPriceRange", new object[] {
                        from,
                        to});
            return ((System.Xml.XmlElement[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCarsByPriceRangeAsync(double from, double to) {
            this.SearchCarsByPriceRangeAsync(from, to, null);
        }
        
        /// <remarks/>
        public void SearchCarsByPriceRangeAsync(double from, double to, object userState) {
            if ((this.SearchCarsByPriceRangeOperationCompleted == null)) {
                this.SearchCarsByPriceRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCarsByPriceRangeOperationCompleted);
            }
            this.InvokeAsync("SearchCarsByPriceRange", new object[] {
                        from,
                        to}, this.SearchCarsByPriceRangeOperationCompleted, userState);
        }
        
        private void OnSearchCarsByPriceRangeOperationCompleted(object arg) {
            if ((this.SearchCarsByPriceRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCarsByPriceRangeCompleted(this, new SearchCarsByPriceRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CalculationOfProfit", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CalculationOfProfit() {
            object[] results = this.Invoke("CalculationOfProfit", new object[0]);
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CalculationOfProfitAsync() {
            this.CalculationOfProfitAsync(null);
        }
        
        /// <remarks/>
        public void CalculationOfProfitAsync(object userState) {
            if ((this.CalculationOfProfitOperationCompleted == null)) {
                this.CalculationOfProfitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculationOfProfitOperationCompleted);
            }
            this.InvokeAsync("CalculationOfProfit", new object[0], this.CalculationOfProfitOperationCompleted, userState);
        }
        
        private void OnCalculationOfProfitOperationCompleted(object arg) {
            if ((this.CalculationOfProfitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculationOfProfitCompleted(this, new CalculationOfProfitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/HelloWorld", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/")]
    public partial class Car {
        
        private string brandField;
        
        private string modelField;
        
        private string bodyTypeField;
        
        private int yearofproductionField;
        
        private string vINNumberField;
        
        private string colorField;
        
        private string transmissionField;
        
        private string fuelField;
        
        private int mileageField;
        
        private int priceField;
        
        private string historicalservicedataField;
        
        private string dateofregistrationField;
        
        private string statusField;
        
        private string dateofsaleField;
        
        private string salepriceField;
        
        private string profitField;
        
        /// <remarks/>
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string BodyType {
            get {
                return this.bodyTypeField;
            }
            set {
                this.bodyTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Yearofproduction {
            get {
                return this.yearofproductionField;
            }
            set {
                this.yearofproductionField = value;
            }
        }
        
        /// <remarks/>
        public string VINNumber {
            get {
                return this.vINNumberField;
            }
            set {
                this.vINNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string Transmission {
            get {
                return this.transmissionField;
            }
            set {
                this.transmissionField = value;
            }
        }
        
        /// <remarks/>
        public string Fuel {
            get {
                return this.fuelField;
            }
            set {
                this.fuelField = value;
            }
        }
        
        /// <remarks/>
        public int Mileage {
            get {
                return this.mileageField;
            }
            set {
                this.mileageField = value;
            }
        }
        
        /// <remarks/>
        public int Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string Historicalservicedata {
            get {
                return this.historicalservicedataField;
            }
            set {
                this.historicalservicedataField = value;
            }
        }
        
        /// <remarks/>
        public string Dateofregistration {
            get {
                return this.dateofregistrationField;
            }
            set {
                this.dateofregistrationField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Dateofsale {
            get {
                return this.dateofsaleField;
            }
            set {
                this.dateofsaleField = value;
            }
        }
        
        /// <remarks/>
        public string Saleprice {
            get {
                return this.salepriceField;
            }
            set {
                this.salepriceField = value;
            }
        }
        
        /// <remarks/>
        public string Profit {
            get {
                return this.profitField;
            }
            set {
                this.profitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addCarToXmlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ShowAllCarsCompletedEventHandler(object sender, ShowAllCarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowAllCarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowAllCarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Car[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Car[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FindCarByVINCompletedEventHandler(object sender, FindCarByVINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCarByVINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCarByVINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCarSaleCompletedEventHandler(object sender, UpdateCarSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCarByVinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTotalCarsSoldPerYearCompletedEventHandler(object sender, GetTotalCarsSoldPerYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalCarsSoldPerYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalCarsSoldPerYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FilterByParametersCompletedEventHandler(object sender, FilterByParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterByParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterByParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSoldAndUnsoldCarsCompletedEventHandler(object sender, GetSoldAndUnsoldCarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSoldAndUnsoldCarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSoldAndUnsoldCarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveUnsoldCarsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchCarsByPriceRangeCompletedEventHandler(object sender, SearchCarsByPriceRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCarsByPriceRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCarsByPriceRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CalculationOfProfitCompletedEventHandler(object sender, CalculationOfProfitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculationOfProfitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculationOfProfitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591